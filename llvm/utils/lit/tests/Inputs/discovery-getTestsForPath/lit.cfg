import os
import lit.formats

class CustomFormat(lit.formats.ShTest):
    def getTestsForPath(self, testSuite, path_in_suite, litConfig, localConfig):
        for sub in ['one.test', 'two.test']:
            basePath = os.path.dirname(testSuite.getExecPath(path_in_suite))
            os.makedirs(basePath, exist_ok=True)
            generatedFile = os.path.join(basePath, sub)
            with open(generatedFile, 'w') as dst:
                with open(testSuite.getSourcePath(path_in_suite), 'r') as src:
                    dst.write(src.read())
            yield lit.Test.Test(testSuite, (generatedFile, ), localConfig)

# This hack is necessary to make pickling work: we define CustomFormat here but it gets
# used from within lit.TestingConfig, and pickle needs to be able to find that class as-if
# it had been defined within lit.TestingConfig.
setattr(lit.TestingConfig, 'CustomFormat', CustomFormat)

config.name = "discovery-getTestsForPath-suite"
config.suffixes = [".test"]
config.test_format = CustomFormat()
config.test_source_root = None
config.test_exec_root = None
